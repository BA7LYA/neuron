/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ptformat.proto */

#ifndef PROTOBUF_C_ptformat_2eproto__INCLUDED
#define PROTOBUF_C_ptformat_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Model__DriverActionRequest Model__DriverActionRequest;
typedef struct Model__DriverActionResponse Model__DriverActionResponse;
typedef struct Model__DataItemValue Model__DataItemValue;
typedef struct Model__DataItem Model__DataItem;
typedef struct Model__DataReport Model__DataReport;
typedef struct Model__ReadRequest Model__ReadRequest;
typedef struct Model__ReadResponse Model__ReadResponse;
typedef struct Model__WriteRequest Model__WriteRequest;
typedef struct Model__WriteResponseItem Model__WriteResponseItem;
typedef struct Model__WriteResponse Model__WriteResponse;
typedef struct Model__NodeStateReport Model__NodeStateReport;
typedef struct Model__NodeState Model__NodeState;
typedef struct Model__FileListRequest Model__FileListRequest;
typedef struct Model__FileListResponse Model__FileListResponse;
typedef struct Model__FileItem Model__FileItem;
typedef struct Model__FileUploadRequest Model__FileUploadRequest;
typedef struct Model__FileUploadResponse Model__FileUploadResponse;
typedef struct Model__FileUploadDataRequest Model__FileUploadDataRequest;
typedef struct Model__FileUploadDataResponse Model__FileUploadDataResponse;
typedef struct Model__FileDownloadRequest Model__FileDownloadRequest;
typedef struct Model__FileDownloadResponse Model__FileDownloadResponse;
typedef struct Model__FileDownloadDataRequest Model__FileDownloadDataRequest;
typedef struct Model__FileDownloadDataResponse Model__FileDownloadDataResponse;


/* --- enums --- */


/* --- messages --- */

/*
 **Action-Begin
 */
struct  Model__DriverActionRequest
{
  ProtobufCMessage base;
  char *uuid;
  char *node;
  char *action;
};
#define MODEL__DRIVER_ACTION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__driver_action_request__descriptor) \
    , NULL, NULL, NULL }


struct  Model__DriverActionResponse
{
  ProtobufCMessage base;
  char *uuid;
  int32_t error;
};
#define MODEL__DRIVER_ACTION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__driver_action_response__descriptor) \
    , NULL, 0 }


typedef enum {
  MODEL__DATA_ITEM_VALUE__VALUE__NOT_SET = 0,
  MODEL__DATA_ITEM_VALUE__VALUE_INT_VALUE = 1,
  MODEL__DATA_ITEM_VALUE__VALUE_FLOAT_VALUE = 2,
  MODEL__DATA_ITEM_VALUE__VALUE_STRING_VALUE = 3,
  MODEL__DATA_ITEM_VALUE__VALUE_BOOL_VALUE = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MODEL__DATA_ITEM_VALUE__VALUE__CASE)
} Model__DataItemValue__ValueCase;

/*
 **Data-Report-Begin
 */
struct  Model__DataItemValue
{
  ProtobufCMessage base;
  Model__DataItemValue__ValueCase value_case;
  union {
    int64_t int_value;
    float float_value;
    char *string_value;
    protobuf_c_boolean bool_value;
  };
};
#define MODEL__DATA_ITEM_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__data_item_value__descriptor) \
    , MODEL__DATA_ITEM_VALUE__VALUE__NOT_SET, {0} }


typedef enum {
  MODEL__DATA_ITEM__ITEM__NOT_SET = 0,
  MODEL__DATA_ITEM__ITEM_VALUE = 2,
  MODEL__DATA_ITEM__ITEM_ERROR = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MODEL__DATA_ITEM__ITEM__CASE)
} Model__DataItem__ItemCase;

struct  Model__DataItem
{
  ProtobufCMessage base;
  char *name;
  protobuf_c_boolean has_q;
  int32_t q;
  protobuf_c_boolean has_t;
  int64_t t;
  Model__DataItem__ItemCase item_case;
  union {
    Model__DataItemValue *value;
    int32_t error;
  };
};
#define MODEL__DATA_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__data_item__descriptor) \
    , NULL, 0, 0, 0, 0, MODEL__DATA_ITEM__ITEM__NOT_SET, {0} }


struct  Model__DataReport
{
  ProtobufCMessage base;
  char *node;
  char *group;
  int64_t timestamp;
  size_t n_tags;
  Model__DataItem **tags;
};
#define MODEL__DATA_REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__data_report__descriptor) \
    , NULL, NULL, 0, 0,NULL }


/*
 **Read-Begin
 */
struct  Model__ReadRequest
{
  ProtobufCMessage base;
  char *uuid;
  char *node;
  char *group;
  size_t n_tags;
  char **tags;
};
#define MODEL__READ_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__read_request__descriptor) \
    , NULL, NULL, NULL, 0,NULL }


struct  Model__ReadResponse
{
  ProtobufCMessage base;
  char *uuid;
  size_t n_tags;
  Model__DataItem **tags;
};
#define MODEL__READ_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__read_response__descriptor) \
    , NULL, 0,NULL }


/*
 **Write-Begin
 */
struct  Model__WriteRequest
{
  ProtobufCMessage base;
  char *uuid;
  char *node;
  char *group;
  size_t n_tags;
  Model__DataItem **tags;
};
#define MODEL__WRITE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__write_request__descriptor) \
    , NULL, NULL, NULL, 0,NULL }


struct  Model__WriteResponseItem
{
  ProtobufCMessage base;
  char *name;
  int32_t error;
};
#define MODEL__WRITE_RESPONSE_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__write_response_item__descriptor) \
    , NULL, 0 }


struct  Model__WriteResponse
{
  ProtobufCMessage base;
  char *uuid;
  size_t n_errors;
  Model__WriteResponseItem **errors;
};
#define MODEL__WRITE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__write_response__descriptor) \
    , NULL, 0,NULL }


/*
 *  **Node-State-Begin* 
 */
struct  Model__NodeStateReport
{
  ProtobufCMessage base;
  int64_t timestamp;
  size_t n_nodes;
  Model__NodeState **nodes;
};
#define MODEL__NODE_STATE_REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__node_state_report__descriptor) \
    , 0, 0,NULL }


struct  Model__NodeState
{
  ProtobufCMessage base;
  char *node;
  int32_t link;
  int32_t running;
};
#define MODEL__NODE_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__node_state__descriptor) \
    , NULL, 0, 0 }


/*
 **Directory-Begin
 */
struct  Model__FileListRequest
{
  ProtobufCMessage base;
  char *uuid;
  char *node;
  char *path;
};
#define MODEL__FILE_LIST_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__file_list_request__descriptor) \
    , NULL, NULL, NULL }


struct  Model__FileListResponse
{
  ProtobufCMessage base;
  char *uuid;
  int32_t error;
  size_t n_files;
  Model__FileItem **files;
};
#define MODEL__FILE_LIST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__file_list_response__descriptor) \
    , NULL, 0, 0,NULL }


struct  Model__FileItem
{
  ProtobufCMessage base;
  char *name;
  int32_t type;
  int32_t size;
  int64_t t;
};
#define MODEL__FILE_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__file_item__descriptor) \
    , NULL, 0, 0, 0 }


/*
 **File-Upload-Begin
 */
struct  Model__FileUploadRequest
{
  ProtobufCMessage base;
  char *uuid;
  char *node;
  char *path;
};
#define MODEL__FILE_UPLOAD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__file_upload_request__descriptor) \
    , NULL, NULL, NULL }


struct  Model__FileUploadResponse
{
  ProtobufCMessage base;
  char *uuid;
  int32_t error;
};
#define MODEL__FILE_UPLOAD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__file_upload_response__descriptor) \
    , NULL, 0 }


struct  Model__FileUploadDataRequest
{
  ProtobufCMessage base;
  char *uuid;
  char *node;
  char *path;
};
#define MODEL__FILE_UPLOAD_DATA_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__file_upload_data_request__descriptor) \
    , NULL, NULL, NULL }


struct  Model__FileUploadDataResponse
{
  ProtobufCMessage base;
  char *uuid;
  protobuf_c_boolean more;
  ProtobufCBinaryData data;
  int32_t error;
};
#define MODEL__FILE_UPLOAD_DATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__file_upload_data_response__descriptor) \
    , NULL, 0, {0,NULL}, 0 }


/*
 **File-Download-Begin
 */
struct  Model__FileDownloadRequest
{
  ProtobufCMessage base;
  char *uuid;
  char *node;
  char *src_path;
  char *dst_path;
  int64_t size;
};
#define MODEL__FILE_DOWNLOAD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__file_download_request__descriptor) \
    , NULL, NULL, NULL, NULL, 0 }


struct  Model__FileDownloadResponse
{
  ProtobufCMessage base;
  char *uuid;
  int32_t error;
};
#define MODEL__FILE_DOWNLOAD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__file_download_response__descriptor) \
    , NULL, 0 }


struct  Model__FileDownloadDataRequest
{
  ProtobufCMessage base;
  char *node;
  char *path;
};
#define MODEL__FILE_DOWNLOAD_DATA_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__file_download_data_request__descriptor) \
    , NULL, NULL }


struct  Model__FileDownloadDataResponse
{
  ProtobufCMessage base;
  char *node;
  char *path;
  protobuf_c_boolean more;
  ProtobufCBinaryData data;
};
#define MODEL__FILE_DOWNLOAD_DATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__file_download_data_response__descriptor) \
    , NULL, NULL, 0, {0,NULL} }


/* Model__DriverActionRequest methods */
void   model__driver_action_request__init
                     (Model__DriverActionRequest         *message);
size_t model__driver_action_request__get_packed_size
                     (const Model__DriverActionRequest   *message);
size_t model__driver_action_request__pack
                     (const Model__DriverActionRequest   *message,
                      uint8_t             *out);
size_t model__driver_action_request__pack_to_buffer
                     (const Model__DriverActionRequest   *message,
                      ProtobufCBuffer     *buffer);
Model__DriverActionRequest *
       model__driver_action_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__driver_action_request__free_unpacked
                     (Model__DriverActionRequest *message,
                      ProtobufCAllocator *allocator);
/* Model__DriverActionResponse methods */
void   model__driver_action_response__init
                     (Model__DriverActionResponse         *message);
size_t model__driver_action_response__get_packed_size
                     (const Model__DriverActionResponse   *message);
size_t model__driver_action_response__pack
                     (const Model__DriverActionResponse   *message,
                      uint8_t             *out);
size_t model__driver_action_response__pack_to_buffer
                     (const Model__DriverActionResponse   *message,
                      ProtobufCBuffer     *buffer);
Model__DriverActionResponse *
       model__driver_action_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__driver_action_response__free_unpacked
                     (Model__DriverActionResponse *message,
                      ProtobufCAllocator *allocator);
/* Model__DataItemValue methods */
void   model__data_item_value__init
                     (Model__DataItemValue         *message);
size_t model__data_item_value__get_packed_size
                     (const Model__DataItemValue   *message);
size_t model__data_item_value__pack
                     (const Model__DataItemValue   *message,
                      uint8_t             *out);
size_t model__data_item_value__pack_to_buffer
                     (const Model__DataItemValue   *message,
                      ProtobufCBuffer     *buffer);
Model__DataItemValue *
       model__data_item_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__data_item_value__free_unpacked
                     (Model__DataItemValue *message,
                      ProtobufCAllocator *allocator);
/* Model__DataItem methods */
void   model__data_item__init
                     (Model__DataItem         *message);
size_t model__data_item__get_packed_size
                     (const Model__DataItem   *message);
size_t model__data_item__pack
                     (const Model__DataItem   *message,
                      uint8_t             *out);
size_t model__data_item__pack_to_buffer
                     (const Model__DataItem   *message,
                      ProtobufCBuffer     *buffer);
Model__DataItem *
       model__data_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__data_item__free_unpacked
                     (Model__DataItem *message,
                      ProtobufCAllocator *allocator);
/* Model__DataReport methods */
void   model__data_report__init
                     (Model__DataReport         *message);
size_t model__data_report__get_packed_size
                     (const Model__DataReport   *message);
size_t model__data_report__pack
                     (const Model__DataReport   *message,
                      uint8_t             *out);
size_t model__data_report__pack_to_buffer
                     (const Model__DataReport   *message,
                      ProtobufCBuffer     *buffer);
Model__DataReport *
       model__data_report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__data_report__free_unpacked
                     (Model__DataReport *message,
                      ProtobufCAllocator *allocator);
/* Model__ReadRequest methods */
void   model__read_request__init
                     (Model__ReadRequest         *message);
size_t model__read_request__get_packed_size
                     (const Model__ReadRequest   *message);
size_t model__read_request__pack
                     (const Model__ReadRequest   *message,
                      uint8_t             *out);
size_t model__read_request__pack_to_buffer
                     (const Model__ReadRequest   *message,
                      ProtobufCBuffer     *buffer);
Model__ReadRequest *
       model__read_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__read_request__free_unpacked
                     (Model__ReadRequest *message,
                      ProtobufCAllocator *allocator);
/* Model__ReadResponse methods */
void   model__read_response__init
                     (Model__ReadResponse         *message);
size_t model__read_response__get_packed_size
                     (const Model__ReadResponse   *message);
size_t model__read_response__pack
                     (const Model__ReadResponse   *message,
                      uint8_t             *out);
size_t model__read_response__pack_to_buffer
                     (const Model__ReadResponse   *message,
                      ProtobufCBuffer     *buffer);
Model__ReadResponse *
       model__read_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__read_response__free_unpacked
                     (Model__ReadResponse *message,
                      ProtobufCAllocator *allocator);
/* Model__WriteRequest methods */
void   model__write_request__init
                     (Model__WriteRequest         *message);
size_t model__write_request__get_packed_size
                     (const Model__WriteRequest   *message);
size_t model__write_request__pack
                     (const Model__WriteRequest   *message,
                      uint8_t             *out);
size_t model__write_request__pack_to_buffer
                     (const Model__WriteRequest   *message,
                      ProtobufCBuffer     *buffer);
Model__WriteRequest *
       model__write_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__write_request__free_unpacked
                     (Model__WriteRequest *message,
                      ProtobufCAllocator *allocator);
/* Model__WriteResponseItem methods */
void   model__write_response_item__init
                     (Model__WriteResponseItem         *message);
size_t model__write_response_item__get_packed_size
                     (const Model__WriteResponseItem   *message);
size_t model__write_response_item__pack
                     (const Model__WriteResponseItem   *message,
                      uint8_t             *out);
size_t model__write_response_item__pack_to_buffer
                     (const Model__WriteResponseItem   *message,
                      ProtobufCBuffer     *buffer);
Model__WriteResponseItem *
       model__write_response_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__write_response_item__free_unpacked
                     (Model__WriteResponseItem *message,
                      ProtobufCAllocator *allocator);
/* Model__WriteResponse methods */
void   model__write_response__init
                     (Model__WriteResponse         *message);
size_t model__write_response__get_packed_size
                     (const Model__WriteResponse   *message);
size_t model__write_response__pack
                     (const Model__WriteResponse   *message,
                      uint8_t             *out);
size_t model__write_response__pack_to_buffer
                     (const Model__WriteResponse   *message,
                      ProtobufCBuffer     *buffer);
Model__WriteResponse *
       model__write_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__write_response__free_unpacked
                     (Model__WriteResponse *message,
                      ProtobufCAllocator *allocator);
/* Model__NodeStateReport methods */
void   model__node_state_report__init
                     (Model__NodeStateReport         *message);
size_t model__node_state_report__get_packed_size
                     (const Model__NodeStateReport   *message);
size_t model__node_state_report__pack
                     (const Model__NodeStateReport   *message,
                      uint8_t             *out);
size_t model__node_state_report__pack_to_buffer
                     (const Model__NodeStateReport   *message,
                      ProtobufCBuffer     *buffer);
Model__NodeStateReport *
       model__node_state_report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__node_state_report__free_unpacked
                     (Model__NodeStateReport *message,
                      ProtobufCAllocator *allocator);
/* Model__NodeState methods */
void   model__node_state__init
                     (Model__NodeState         *message);
size_t model__node_state__get_packed_size
                     (const Model__NodeState   *message);
size_t model__node_state__pack
                     (const Model__NodeState   *message,
                      uint8_t             *out);
size_t model__node_state__pack_to_buffer
                     (const Model__NodeState   *message,
                      ProtobufCBuffer     *buffer);
Model__NodeState *
       model__node_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__node_state__free_unpacked
                     (Model__NodeState *message,
                      ProtobufCAllocator *allocator);
/* Model__FileListRequest methods */
void   model__file_list_request__init
                     (Model__FileListRequest         *message);
size_t model__file_list_request__get_packed_size
                     (const Model__FileListRequest   *message);
size_t model__file_list_request__pack
                     (const Model__FileListRequest   *message,
                      uint8_t             *out);
size_t model__file_list_request__pack_to_buffer
                     (const Model__FileListRequest   *message,
                      ProtobufCBuffer     *buffer);
Model__FileListRequest *
       model__file_list_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__file_list_request__free_unpacked
                     (Model__FileListRequest *message,
                      ProtobufCAllocator *allocator);
/* Model__FileListResponse methods */
void   model__file_list_response__init
                     (Model__FileListResponse         *message);
size_t model__file_list_response__get_packed_size
                     (const Model__FileListResponse   *message);
size_t model__file_list_response__pack
                     (const Model__FileListResponse   *message,
                      uint8_t             *out);
size_t model__file_list_response__pack_to_buffer
                     (const Model__FileListResponse   *message,
                      ProtobufCBuffer     *buffer);
Model__FileListResponse *
       model__file_list_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__file_list_response__free_unpacked
                     (Model__FileListResponse *message,
                      ProtobufCAllocator *allocator);
/* Model__FileItem methods */
void   model__file_item__init
                     (Model__FileItem         *message);
size_t model__file_item__get_packed_size
                     (const Model__FileItem   *message);
size_t model__file_item__pack
                     (const Model__FileItem   *message,
                      uint8_t             *out);
size_t model__file_item__pack_to_buffer
                     (const Model__FileItem   *message,
                      ProtobufCBuffer     *buffer);
Model__FileItem *
       model__file_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__file_item__free_unpacked
                     (Model__FileItem *message,
                      ProtobufCAllocator *allocator);
/* Model__FileUploadRequest methods */
void   model__file_upload_request__init
                     (Model__FileUploadRequest         *message);
size_t model__file_upload_request__get_packed_size
                     (const Model__FileUploadRequest   *message);
size_t model__file_upload_request__pack
                     (const Model__FileUploadRequest   *message,
                      uint8_t             *out);
size_t model__file_upload_request__pack_to_buffer
                     (const Model__FileUploadRequest   *message,
                      ProtobufCBuffer     *buffer);
Model__FileUploadRequest *
       model__file_upload_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__file_upload_request__free_unpacked
                     (Model__FileUploadRequest *message,
                      ProtobufCAllocator *allocator);
/* Model__FileUploadResponse methods */
void   model__file_upload_response__init
                     (Model__FileUploadResponse         *message);
size_t model__file_upload_response__get_packed_size
                     (const Model__FileUploadResponse   *message);
size_t model__file_upload_response__pack
                     (const Model__FileUploadResponse   *message,
                      uint8_t             *out);
size_t model__file_upload_response__pack_to_buffer
                     (const Model__FileUploadResponse   *message,
                      ProtobufCBuffer     *buffer);
Model__FileUploadResponse *
       model__file_upload_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__file_upload_response__free_unpacked
                     (Model__FileUploadResponse *message,
                      ProtobufCAllocator *allocator);
/* Model__FileUploadDataRequest methods */
void   model__file_upload_data_request__init
                     (Model__FileUploadDataRequest         *message);
size_t model__file_upload_data_request__get_packed_size
                     (const Model__FileUploadDataRequest   *message);
size_t model__file_upload_data_request__pack
                     (const Model__FileUploadDataRequest   *message,
                      uint8_t             *out);
size_t model__file_upload_data_request__pack_to_buffer
                     (const Model__FileUploadDataRequest   *message,
                      ProtobufCBuffer     *buffer);
Model__FileUploadDataRequest *
       model__file_upload_data_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__file_upload_data_request__free_unpacked
                     (Model__FileUploadDataRequest *message,
                      ProtobufCAllocator *allocator);
/* Model__FileUploadDataResponse methods */
void   model__file_upload_data_response__init
                     (Model__FileUploadDataResponse         *message);
size_t model__file_upload_data_response__get_packed_size
                     (const Model__FileUploadDataResponse   *message);
size_t model__file_upload_data_response__pack
                     (const Model__FileUploadDataResponse   *message,
                      uint8_t             *out);
size_t model__file_upload_data_response__pack_to_buffer
                     (const Model__FileUploadDataResponse   *message,
                      ProtobufCBuffer     *buffer);
Model__FileUploadDataResponse *
       model__file_upload_data_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__file_upload_data_response__free_unpacked
                     (Model__FileUploadDataResponse *message,
                      ProtobufCAllocator *allocator);
/* Model__FileDownloadRequest methods */
void   model__file_download_request__init
                     (Model__FileDownloadRequest         *message);
size_t model__file_download_request__get_packed_size
                     (const Model__FileDownloadRequest   *message);
size_t model__file_download_request__pack
                     (const Model__FileDownloadRequest   *message,
                      uint8_t             *out);
size_t model__file_download_request__pack_to_buffer
                     (const Model__FileDownloadRequest   *message,
                      ProtobufCBuffer     *buffer);
Model__FileDownloadRequest *
       model__file_download_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__file_download_request__free_unpacked
                     (Model__FileDownloadRequest *message,
                      ProtobufCAllocator *allocator);
/* Model__FileDownloadResponse methods */
void   model__file_download_response__init
                     (Model__FileDownloadResponse         *message);
size_t model__file_download_response__get_packed_size
                     (const Model__FileDownloadResponse   *message);
size_t model__file_download_response__pack
                     (const Model__FileDownloadResponse   *message,
                      uint8_t             *out);
size_t model__file_download_response__pack_to_buffer
                     (const Model__FileDownloadResponse   *message,
                      ProtobufCBuffer     *buffer);
Model__FileDownloadResponse *
       model__file_download_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__file_download_response__free_unpacked
                     (Model__FileDownloadResponse *message,
                      ProtobufCAllocator *allocator);
/* Model__FileDownloadDataRequest methods */
void   model__file_download_data_request__init
                     (Model__FileDownloadDataRequest         *message);
size_t model__file_download_data_request__get_packed_size
                     (const Model__FileDownloadDataRequest   *message);
size_t model__file_download_data_request__pack
                     (const Model__FileDownloadDataRequest   *message,
                      uint8_t             *out);
size_t model__file_download_data_request__pack_to_buffer
                     (const Model__FileDownloadDataRequest   *message,
                      ProtobufCBuffer     *buffer);
Model__FileDownloadDataRequest *
       model__file_download_data_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__file_download_data_request__free_unpacked
                     (Model__FileDownloadDataRequest *message,
                      ProtobufCAllocator *allocator);
/* Model__FileDownloadDataResponse methods */
void   model__file_download_data_response__init
                     (Model__FileDownloadDataResponse         *message);
size_t model__file_download_data_response__get_packed_size
                     (const Model__FileDownloadDataResponse   *message);
size_t model__file_download_data_response__pack
                     (const Model__FileDownloadDataResponse   *message,
                      uint8_t             *out);
size_t model__file_download_data_response__pack_to_buffer
                     (const Model__FileDownloadDataResponse   *message,
                      ProtobufCBuffer     *buffer);
Model__FileDownloadDataResponse *
       model__file_download_data_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__file_download_data_response__free_unpacked
                     (Model__FileDownloadDataResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Model__DriverActionRequest_Closure)
                 (const Model__DriverActionRequest *message,
                  void *closure_data);
typedef void (*Model__DriverActionResponse_Closure)
                 (const Model__DriverActionResponse *message,
                  void *closure_data);
typedef void (*Model__DataItemValue_Closure)
                 (const Model__DataItemValue *message,
                  void *closure_data);
typedef void (*Model__DataItem_Closure)
                 (const Model__DataItem *message,
                  void *closure_data);
typedef void (*Model__DataReport_Closure)
                 (const Model__DataReport *message,
                  void *closure_data);
typedef void (*Model__ReadRequest_Closure)
                 (const Model__ReadRequest *message,
                  void *closure_data);
typedef void (*Model__ReadResponse_Closure)
                 (const Model__ReadResponse *message,
                  void *closure_data);
typedef void (*Model__WriteRequest_Closure)
                 (const Model__WriteRequest *message,
                  void *closure_data);
typedef void (*Model__WriteResponseItem_Closure)
                 (const Model__WriteResponseItem *message,
                  void *closure_data);
typedef void (*Model__WriteResponse_Closure)
                 (const Model__WriteResponse *message,
                  void *closure_data);
typedef void (*Model__NodeStateReport_Closure)
                 (const Model__NodeStateReport *message,
                  void *closure_data);
typedef void (*Model__NodeState_Closure)
                 (const Model__NodeState *message,
                  void *closure_data);
typedef void (*Model__FileListRequest_Closure)
                 (const Model__FileListRequest *message,
                  void *closure_data);
typedef void (*Model__FileListResponse_Closure)
                 (const Model__FileListResponse *message,
                  void *closure_data);
typedef void (*Model__FileItem_Closure)
                 (const Model__FileItem *message,
                  void *closure_data);
typedef void (*Model__FileUploadRequest_Closure)
                 (const Model__FileUploadRequest *message,
                  void *closure_data);
typedef void (*Model__FileUploadResponse_Closure)
                 (const Model__FileUploadResponse *message,
                  void *closure_data);
typedef void (*Model__FileUploadDataRequest_Closure)
                 (const Model__FileUploadDataRequest *message,
                  void *closure_data);
typedef void (*Model__FileUploadDataResponse_Closure)
                 (const Model__FileUploadDataResponse *message,
                  void *closure_data);
typedef void (*Model__FileDownloadRequest_Closure)
                 (const Model__FileDownloadRequest *message,
                  void *closure_data);
typedef void (*Model__FileDownloadResponse_Closure)
                 (const Model__FileDownloadResponse *message,
                  void *closure_data);
typedef void (*Model__FileDownloadDataRequest_Closure)
                 (const Model__FileDownloadDataRequest *message,
                  void *closure_data);
typedef void (*Model__FileDownloadDataResponse_Closure)
                 (const Model__FileDownloadDataResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor model__driver_action_request__descriptor;
extern const ProtobufCMessageDescriptor model__driver_action_response__descriptor;
extern const ProtobufCMessageDescriptor model__data_item_value__descriptor;
extern const ProtobufCMessageDescriptor model__data_item__descriptor;
extern const ProtobufCMessageDescriptor model__data_report__descriptor;
extern const ProtobufCMessageDescriptor model__read_request__descriptor;
extern const ProtobufCMessageDescriptor model__read_response__descriptor;
extern const ProtobufCMessageDescriptor model__write_request__descriptor;
extern const ProtobufCMessageDescriptor model__write_response_item__descriptor;
extern const ProtobufCMessageDescriptor model__write_response__descriptor;
extern const ProtobufCMessageDescriptor model__node_state_report__descriptor;
extern const ProtobufCMessageDescriptor model__node_state__descriptor;
extern const ProtobufCMessageDescriptor model__file_list_request__descriptor;
extern const ProtobufCMessageDescriptor model__file_list_response__descriptor;
extern const ProtobufCMessageDescriptor model__file_item__descriptor;
extern const ProtobufCMessageDescriptor model__file_upload_request__descriptor;
extern const ProtobufCMessageDescriptor model__file_upload_response__descriptor;
extern const ProtobufCMessageDescriptor model__file_upload_data_request__descriptor;
extern const ProtobufCMessageDescriptor model__file_upload_data_response__descriptor;
extern const ProtobufCMessageDescriptor model__file_download_request__descriptor;
extern const ProtobufCMessageDescriptor model__file_download_response__descriptor;
extern const ProtobufCMessageDescriptor model__file_download_data_request__descriptor;
extern const ProtobufCMessageDescriptor model__file_download_data_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ptformat_2eproto__INCLUDED */
